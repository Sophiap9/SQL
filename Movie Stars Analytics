# For this project, I have created a table consisting of information on various famous people. 

CREATE TABLE movie_stars (id INTEGER PRIMARY KEY, name TEXT, age INTEGER, gender TEXT, relationship_status TEXT, total_movies INTEGER, movie_genre INTEGER);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Ashton Kutcher", 45, "male", "married", 29, 1);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Mila Kunis", 39, "female", "married", 36, 1);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("John Krasinski", 43, "male", "married", 35, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Emily Blunt", 40, "female", "married", 52, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("George Clooney", 62, "male", "married", 49, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Matthew McConaughey", 53, "male", "married", 52, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Meryl Streep", 74, "female", "married", 70, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Neve Campbell", 49, "female", "dating", 27, 4);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Zendaya", 26, "female", "dating", 21, 2);
INSERT INTO movie_stars (name, age, gender, relationship_status, total_movies, movie_genre) VALUES ("Tom Holland", 27, "male", "dating", 35, 2);

CREATE TABLE movie_genre (id INTEGER PRIMARY KEY, genre TEXT);
INSERT INTO movie_genre VALUES (1, "comedy");
INSERT INTO movie_genre VALUES (2, "drama");
INSERT INTO movie_genre VALUES (3, "action");
INSERT INTO movie_genre VALUES (4, "horror");

# I have created a second table consisting of data about each person's relationship status.

CREATE TABLE couples (id INTEGER PRIMARY KEY, person1 INTEGER, person2 INTEGER);
INSERT INTO couples (person1, person2) VALUES (1, 2);
INSERT INTO couples (person1, person2) VALUES (3, 4);
INSERT INTO couples (person1, person2) VALUES (9, 10);


/*What movie genre does each actor belong to?*/
SELECT movie_stars.name, movie_genre.genre 
FROM movie_stars
JOIN movie_genre
ON movie_stars.movie_genre = movie_genre.id;

/*Which actors have met the goal of being in 50 or more movies?*/
SELECT name, total_movies, CASE 
WHEN total_movies > 50 THEN "above target"
WHEN total_movies < 50 THEN "below target"
END as "goal"
FROM movie_stars
ORDER BY total_movies DESC;

/*How can the data be organized to display the actors who are in a relationship with each other, next to one another?*/
SELECT a.name , b.name  
FROM couples
JOIN movie_stars a
ON couples.person1 = a.id
JOIN movie_stars b
ON couples.person2 = b.id;
